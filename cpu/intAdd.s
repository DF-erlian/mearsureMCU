	AREA Func, CODE, READONLY ;
	EXPORT intadd ;

intadd
	
	push {r0, r1, r2, r3}
    mov r0, #1
    mov r1, #2

    mov r2, #0x00         ;r2 = 0x00000000
    movw r2, #0x9680      ;r2 = 0x00009680
    movt r2, #0x0098      ;r2 = 0x00989680

loop
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
	add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    add r3, r0, r1
    
    ; r2=r2-1
    subs r2, r2, #1
    bne loop
	
	pop {r3, r2, r1, r0}
    bx lr
