	AREA Func, CODE, READONLY ;
	EXPORT vdivf64 ;

vdivf64
	
	push {r2}
	vpush {d0, d1, d2}
    ; ??????
    vmov.f64 d0, #1
    vmov.f64 d1, #2

    ; ???????
    mov r2, #0x00         ; ??? r2
    movw r2, #0x9680      ; ??? 16 ?
    movt r2, #0x0098      ; ??? 16 ?

loop
    ; ?????? 16 ? vdiv.f64 ??
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
	vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    vdiv.f64 d2, d0, d1
    

    ; ???????
    subs r2, r2, #1
    bne loop
	
	vpop {d0, d1, d2}
	pop {r2}
    ; ????
    bx lr
